package com.blogspot.varanasisoftwarejunction.vsjmysql;

import javafx.scene.canvas.GraphicsContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	@Autowired
private BookRepository bookRepository;
	@Autowired
	private ReaderRepository readerRepository;
	@GetMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	@GetMapping(path="/addbook") // Map ONLY POST Requests
	public @ResponseBody String addNewBook (@RequestParam String bookName
			, @RequestParam String subject, @RequestParam Integer price) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Book n = new Book();
		n.setBookName(bookName);
		n.setSubject(subject);
		n.setPrice(price);
		bookRepository.save(n);
		return "Saved";
	}
	@GetMapping(path="/addreader") // Map ONLY POST Requests
	public @ResponseBody String addNewReader (@RequestParam Integer id
			, @RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Reader n = new Reader();
		n.setBook(bookRepository.getById(id));
		n.setName(name);
		

		readerRepository.save(n);
		return "Saved";
	}
	@GetMapping(path="/allbooks")
	public @ResponseBody Iterable<Book> getAllBooks() {
		// This returns a JSON or XML with the books
		return bookRepository.findAll();
	}
	@GetMapping(path="/allreader")
	public @ResponseBody Iterable<Reader> getAllReaders() {
		// This returns a JSON or XML with the books
		return readerRepository.findAll();
	}



	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
